version: '3.8'

services:
  openaimedvision-dev:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      # These will be loaded from .env file
      - ENVIRONMENT=${ENVIRONMENT}
      - DEBUG=${DEBUG}
      - HOST=${HOST}
      - PORT=${PORT}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_CLOUD_LOCATION=${GOOGLE_CLOUD_LOCATION}
      - VERTEX_AI_ENDPOINT_ID=${VERTEX_AI_ENDPOINT_ID}

    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
    env_file:
      - .env

    restart: unless-stopped
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--reload-dir", "/app"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development database (if needed later)
  # postgres-dev:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: openaimedvision_dev
  #     POSTGRES_USER: dev_user
  #     POSTGRES_PASSWORD: dev_password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_dev_data:/var/lib/postgresql/data
  #   restart: unless-stopped

  # Redis for development (caching, rate limiting)
  redis-dev:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  # postgres_dev_data:
  redis_dev_data: 